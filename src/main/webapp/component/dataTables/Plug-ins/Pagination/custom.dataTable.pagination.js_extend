/*var default_aoColumns = [
	{
    	"sTitle": "<label><input type='checkbox' class='ace'/><span class='lbl'></span></label>",
    	"mData" : null,
    	"sClass" : "center",
    	"bSortable" : false,
    	"mRender" : function(data, type, full) {
			return '<label><input type="checkbox" name="selectOrg" class="ace" orgId="'+full.orgId+'" orgNo="'+full.orgNo+'"/><span class="lbl"></span></label>';
		}
    }
 ];*/

$.extend( true, $.fn.dataTable.defaults, {
	/* "oLanguage" : {//语言国际化
		"sUrl" : "/poc/component/dataTables/Plug-ins/Internationalisation/jquery.dataTable.cn.txt"
	}, */
	"oLanguage" : oLanguage,
	//"sDom": '<"toolbar">frtip',
	/* "sDom": "<'row'<'col-lg-10 col-md-10 col-sm-10 col-xs-8'<'toolbar'>><'col-lg-2 col-md-2 col-sm-2 col-xs-4'r>>"
		+"t"
		+"<'row'<'col-lg-4 col-md-4 col-sm-4 col-xs-12'i><'col-lg-4 col-md-4 col-sm-4 col-xs-12'l><'col-lg-4 col-md-4 col-sm-4 col-xs-12'p>>", */
	"sDom": "<'row'<'col-lg-10 col-md-10 col-sm-10 col-xs-8'<'toolbar'>><'col-lg-2 col-md-2 col-sm-2 col-xs-4'r>>"
		+"t"
		+"<'row'<'col-lg-6 col-md-6 col-sm-6 col-xs-12'i><'col-lg-6 col-md-6 col-sm-6 col-xs-12'p>>",
	"bFilter" : false,
	"bSort" : false,
	"bProcessing" : true,
	"bServerSide" : true,
	"bLengthChange" : true,
	"bInfo" : true,
	"bSort" : true,
	"bPaginate" : true,
	"sPaginationType" : "custom",
} );

$.fn.dataTable.defaults.fnServerData = function(sSource, aoData, fnCallback) {
	var $table = $(this);
	var formId = $(this).attr("form");
	var data = $.merge(aoData,$('#'+formId).serializeArray());
	$.ajax({
		type : "post",
		dataType : "json",
		url : sSource,
		data : data,
		success : function(data) {
			fnCallback(data);
			//初始化tooltip
			$('[data-rel=tooltip]').tooltip();
			//checkbox选中事件(全选 /反选 ) 
			$table.find('th input:checkbox').on('click', function(){
				var that = this;
				$(this).closest('table').find('tr > td input:checkbox')
					.each(function(){
						this.checked = that.checked;
						$(this).closest('tr').toggleClass('selected');
					});
			});
		}
	});
};

$.fn.dataTable.defaults.fnDrawCallback = function()  {
	var toolbarId = $(this).attr("toolbar");
	//初始化工具条toolbar
	$("div.toolbar").append($("#"+toolbarId));
	$("#"+toolbarId).show();
};

$.fn.dataTableExt.oPagination.custom = {
    "fnInit": function ( oSettings, nPaging, fnCallbackDraw )
    {
        var nFirst = document.createElement( 'span' );
        var nPrevious = document.createElement( 'span' );
        var nNext = document.createElement( 'span' );
        var nLast = document.createElement( 'span' );
        var nInput = document.createElement( 'input' );
        var nPage = document.createElement( 'span' );
        var nOf = document.createElement( 'span' );
          
        nFirst.innerHTML = oSettings.oLanguage.oPaginate.sFirst;
        nPrevious.innerHTML = oSettings.oLanguage.oPaginate.sPrevious;
        nNext.innerHTML = oSettings.oLanguage.oPaginate.sNext;
        nLast.innerHTML = oSettings.oLanguage.oPaginate.sLast;
          
        nFirst.className = "paginate_button first";
        nPrevious.className = "paginate_button previous";
        nNext.className="paginate_button next";
        nLast.className = "paginate_button last";
        nOf.className = "paginate_of";
        nPage.className = "paginate_page";
          
        if ( oSettings.sTableId !== '' )
        {
            nPaging.setAttribute( 'id', oSettings.sTableId+'_paginate' );
            nPrevious.setAttribute( 'id', oSettings.sTableId+'_previous' );
            nPrevious.setAttribute( 'id', oSettings.sTableId+'_previous' );
            nNext.setAttribute( 'id', oSettings.sTableId+'_next' );
            nLast.setAttribute( 'id', oSettings.sTableId+'_last' );
        }
          
        nInput.type = "text";
        nInput.style.width = "30px";
        nInput.style.display = "inline";
        nPage.innerHTML = " ";
          
        nPaging.appendChild( nFirst );
        nPaging.appendChild( nPrevious );
        nPaging.appendChild( nPage );
        nPaging.appendChild( nInput );
        nPaging.appendChild( nOf );
        nPaging.appendChild( nNext );
        nPaging.appendChild( nLast );
          
        $(nFirst).click( function () {
            oSettings.oApi._fnPageChange( oSettings, "first" );
            fnCallbackDraw( oSettings );
        } );
          
        $(nPrevious).click( function() {
            oSettings.oApi._fnPageChange( oSettings, "previous" );
            fnCallbackDraw( oSettings );
        } );
          
        $(nNext).click( function() {
            oSettings.oApi._fnPageChange( oSettings, "next" );
            fnCallbackDraw( oSettings );
        } );
          
        $(nLast).click( function() {
            oSettings.oApi._fnPageChange( oSettings, "last" );
            fnCallbackDraw( oSettings );
        } );
          
        $(nInput).keyup( function (e) {
              
            if ( e.which == 38 || e.which == 39 )
            {
                this.value++;
            }
            else if ( (e.which == 37 || e.which == 40) && this.value > 1 )
            {
                this.value--;
            }
              
            if ( this.value == "" || this.value.match(/[^0-9]/) )
            {
                /* Nothing entered or non-numeric character */
                return;
            }
              
            var iNewStart = oSettings._iDisplayLength * (this.value - 1);
            if ( iNewStart > oSettings.fnRecordsDisplay() )
            {
                /* Display overrun */
                oSettings._iDisplayStart = (Math.ceil((oSettings.fnRecordsDisplay()-1) / 
                    oSettings._iDisplayLength)-1) * oSettings._iDisplayLength;
                fnCallbackDraw( oSettings );
                return;
            }
              
            oSettings._iDisplayStart = iNewStart;
            fnCallbackDraw( oSettings );
        } );
          
        /* Take the brutal approach to cancelling text selection */
        $('span', nPaging).bind( 'mousedown', function () { return false; } );
        $('span', nPaging).bind( 'selectstart', function () { return false; } );
    },
     
     
    "fnUpdate": function ( oSettings, fnCallbackDraw )
    {
        if ( !oSettings.aanFeatures.p )
        {
            return;
        }
        var iPages = Math.ceil((oSettings.fnRecordsDisplay()) / oSettings._iDisplayLength);
        var iCurrentPage = (iPages == 0) ? 0 : Math.ceil(oSettings._iDisplayStart / oSettings._iDisplayLength) + 1;
          
        /* Loop over each instance of the pager */
        var an = oSettings.aanFeatures.p;
        for ( var i=0, iLen=an.length ; i<iLen ; i++ )
        {
            var spans = an[i].getElementsByTagName('span');
            var inputs = an[i].getElementsByTagName('input');
            spans[3].innerHTML = " of "+iPages
            inputs[0].value = iCurrentPage;
        }
    }
};
